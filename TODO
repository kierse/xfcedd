TODO:
-----
- check given directory to ensure there are image files
- update commandline options to use the more standards compliant
  format
- update logging capabilities to log all actions taken/experienced
  by the server.
- try and determine if X is running (using $DISPLAY variable?) and
  have daemon exit when X is no longer running.
- use Gtk2 and create a toolbar image that allows user to manipulate
  various parameters.
- use Gtk2 and create a toolbar image that allows user to manipulate
  various parameters.
- check to make sure that when a user passes the -n, -v, -h flags 
and the server isn't running that it either starts or does something
else appropriate to the situation
- change behaviour when .xfcedd= file exists in .xfce4 folder but 
there is nothing listening on that port.  App could start anyway or
throw an error and show help.  Help could include command to delete
existing .xfcedd= file.
- when a directory is specified, program should be able to use all 
images, including those in sub directories
- when picking a specific image to display, incorporation ability to 
use regular expression style pattern matching on entered text
- make sure .config/xfce4/xfcedd directory exists
- make variable that contains location of symbolic image link instead of
hard coding it
- update logging capabilities to log all actions taken/experienced
  by the server.
- make sure xfdesktop is running before setting a new image and calling
  it.

NEW
---
- rewrite xfcedd to use xfce list file
- create user config file xfcedd.xml and store it in xfce config folder
  (.config/xfce4)
- maintain dynamic list of images/folders.  When xfdesktop queries
  xfcedd list file, xfcedd (which is listening on filehandler), returns
  a list of the files to choose from.  This way the user can pick a 
  specific image and the daemon can remove images from the list as 
  they are used.
- can there be a file pointing to a non existent file that xfdesktop 
  reads from?  Just like the /proc system in Linux.  The file doesn't
  actually exist but it can be read from.  When something tries to 
  read from it, the process holding the file (in this case xfcedd) would
  return the current data.
